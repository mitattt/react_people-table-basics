{"version":3,"sources":["components/HomePage/HomePage.tsx","components/PageNavLink/PageNavLink.tsx","components/Navigation/Nav.tsx","components/PageNotFound/PageNotFound.tsx","api.ts","components/Loader/Loader.tsx","components/Person/Person.tsx","components/PeopleList/PeopleList.tsx","App.tsx","index.tsx"],"names":["HomePage","className","PageNavLink","to","text","isActive","classNames","Navigation","role","PageNotFound","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","Loader","PersonInfo","personInfo","people","name","sex","born","died","fatherName","motherName","slug","findParent","parentName","parent","find","person","PeopleList","useParams","useState","setPeople","loadingError","setLoadingError","isLoading","setIsLoading","getPeopleFromServer","useEffect","length","map","App","path","element","replace","index","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.cec9bbbe.chunk.js","sourcesContent":["export const HomePage: React.FC = () => (\n  <h1 className=\"title\">Home Page</h1>\n);\n","import classNames from 'classnames';\nimport { NavLink } from 'react-router-dom';\n\ntype Props = {\n  to: string,\n  text: string,\n};\n\nexport const PageNavLink: React.FC<Props> = ({ to, text }) => (\n  <NavLink\n    className={({ isActive }) => classNames(\n      'navbar-item',\n      {\n        'has-background-grey-lighter': isActive,\n      },\n    )}\n    to={to}\n  >\n    {text}\n  </NavLink>\n);\n","import React from 'react';\nimport { PageNavLink } from '../PageNavLink/PageNavLink';\n\nexport const Navigation: React.FC = () => (\n  <nav\n    data-cy=\"nav\"\n    className=\"navbar is-fixed-top has-shadow\"\n    role=\"navigation\"\n    aria-label=\"main navigation\"\n  >\n    <div className=\"container\">\n      <div className=\"navbar-brand\">\n        <PageNavLink\n          to=\"/\"\n          text=\"Home\"\n        />\n\n        <PageNavLink\n          to=\"/people\"\n          text=\"People\"\n        />\n      </div>\n    </div>\n  </nav>\n);\n","export const PageNotFound: React.FC = () => (\n  <h1 className=\"title\">Page not found</h1>\n);\n","import { Person } from './types/PersonType';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import classNames from 'classnames';\nimport React from 'react';\nimport { Link, NavLink } from 'react-router-dom';\nimport { Person } from '../../types';\n\ntype Props = {\n  personInfo: Person\n  people: Person[]\n};\n\nexport const PersonInfo: React.FC<Props> = ({ personInfo, people }) => {\n  const {\n    name,\n    sex,\n    born,\n    died,\n    fatherName,\n    motherName,\n    slug,\n  } = personInfo;\n\n  const findParent = (parentName: string | null) => {\n    const parent = people.find(person => person.name === parentName);\n\n    if (parent) {\n      return (\n        <NavLink\n          to={`/people/${parent.slug}`}\n          className={classNames({ 'has-text-danger': parent.sex === 'f' })}\n        >\n          {parentName}\n        </NavLink>\n      );\n    }\n\n    return parentName || '-';\n  };\n\n  return (\n    <>\n      <td>\n        <Link\n          to={`/people/${slug}`}\n          className={classNames({ 'has-text-danger': sex === 'f' })}\n        >\n          {name}\n        </Link>\n      </td>\n\n      <td>{sex}</td>\n      <td>{born}</td>\n      <td>{died}</td>\n      <td>{findParent(motherName)}</td>\n      <td>{findParent(fatherName)}</td>\n    </>\n  );\n};\n","import classNames from 'classnames';\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getPeople } from '../../api';\nimport { Person } from '../../types';\nimport { Loader } from '../Loader';\nimport { PersonInfo } from '../Person/Person';\n\nexport const PeopleList: React.FC = () => {\n  const { slug } = useParams();\n  const [people, setPeople] = useState<Person[]>([]);\n  const [loadingError, setLoadingError] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const getPeopleFromServer = async () => {\n    try {\n      setIsLoading(true);\n      setLoadingError(false);\n\n      setPeople(await getPeople());\n\n      setIsLoading(false);\n    } catch (error) {\n      setLoadingError(true);\n      setIsLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    getPeopleFromServer();\n  }, []);\n\n  return (\n    <>\n      {loadingError ? (\n        <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n          Something went wrong\n        </p>\n      ) : (\n        <>\n          <h1 className=\"title\">People Page</h1>\n\n          <div className=\"block\">\n            <div className=\"box table-container\">\n              {isLoading ? (\n                <Loader />\n              ) : (\n                <>\n                  {!people.length && !isLoading && (\n                    <p data-cy=\"noPeopleMessage\">\n                      There are no people on the server\n                    </p>\n                  )}\n\n                  <table\n                    data-cy=\"peopleTable\"\n                    className=\"\n                      table is-striped\n                      is-hoverable\n                      is-narrow is-fullwidth\n                    \"\n                  >\n                    <thead>\n                      <tr>\n                        <th>Name</th>\n                        <th>Sex</th>\n                        <th>Born</th>\n                        <th>Died</th>\n                        <th>Mother</th>\n                        <th>Father</th>\n                      </tr>\n                    </thead>\n\n                    <tbody>\n                      {people.map(person => (\n                        <tr\n                          className={classNames({\n                            'has-background-warning': person.slug === slug,\n                          })}\n                          key={person.slug}\n                          data-cy=\"person\"\n                        >\n                          <PersonInfo personInfo={person} people={people} />\n                        </tr>\n                      ))}\n                    </tbody>\n                  </table>\n                </>\n              )}\n            </div>\n          </div>\n        </>\n      )}\n    </>\n  );\n};\n","import React from 'react';\nimport { Navigate, Route, Routes } from 'react-router-dom';\n\nimport './App.scss';\nimport { HomePage } from './components/HomePage/HomePage';\nimport { Navigation } from './components/Navigation/Nav';\nimport { PageNotFound } from './components/PageNotFound/PageNotFound';\nimport { PeopleList } from './components/PeopleList/PeopleList';\n\nexport const App: React.FC = () => {\n  return (\n    <div data-cy=\"app\">\n      <Navigation />\n\n      <main className=\"section\">\n        <div className=\"container\">\n          <Routes>\n            <Route path=\"/\" element={<HomePage />} />\n            <Route path=\"/home\" element={<Navigate to=\"/\" replace />} />\n            <Route path=\"*\" element={<PageNotFound />} />\n\n            <Route path=\"people\">\n              <Route index element={<PeopleList />} />\n              <Route path=\":slug\" element={<PeopleList />} />\n            </Route>\n          </Routes>\n        </div>\n      </main>\n    </div>\n  );\n};\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}